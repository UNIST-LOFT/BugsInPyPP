#!/bin/bash

###Rreproduce all the bugs for every project
# Result is shown in /temp/output.csv

usage="-h
             show this help
       -c
             cleanup /temp directory
"

case $1 in
 -[h?] | --help)
    cat <<-____HALP
        Usage: ${0##*/} [ --help ]
        $usage
____HALP
        exit 0;;
 -c)
    rm -rfv /temp/*
        exit 0;;
esac

projects=$(ls ~/BugsInPy/projects)

echo "Reproducing bugs from all projects"
echo "$projects"

echo "See results in output.csv"

echo "repo,bugid,test" >> /temp/output.csv

export GIT_TERMINAL_PROMPT=0

# Iterate over the projects
for project in $projects; do

  # Get the number of bugs in the project
  bugs=$(ls ~/BugsInPy/projects/$project/bugs | wc -l)

  echo "Working $bugs bugs in project $project ... "

  # For each bug, execute the test
  for bug in $(seq 1 $bugs); do

    # Test buggy version
    bugsinpy-checkout -p $project -v 0 -i $bug -w /temp/projects
    cd /temp/projects/$project
    bugsinpy-compile
    bugsinpy-test

    # Make sure a failure is detected in buggy version and bug is reproducible
    if [ ! -f "bugsinpy_fail.txt" ]; then
      echo "$project,$bug,fail" >> /temp/output.csv
      break
    fi

    # Test fixed version
    bugsinpy-checkout -p $project -v 1 -i $bug -w /temp/projects
    bugsinpy-compile
    bugsinpy-test

    # Test execution output and make sure fixed version passes test ok
    if [ -f "bugsinpy_fail.txt" ]; then
      echo "$project,$bug,fail" >> /temp/output.csv
    else
      echo "$project,$bug,ok" >> /temp/output.csv
    fi

  done
done

echo "see results in /temp/output.csv"
echo "done."
