#!/bin/bash

###Reproduces all the bugs for every project
# Result in /temp/output.csv test ok (reproduced successfully) test fail (unable to reproduce)
# Full test logs in /temp/logs.txt

usage="
       -h
             show this help
       -c
             cleanup /temp directory
"

case $1 in
 -[h?] | --help)
    cat <<-____HALP
        Usage: ${0##*/} [ --help ]
        $usage
____HALP
        exit 0;;
 -c)
    rm -rfv /temp/*
        exit 0;;
esac

mkdir -p /temp/projects

projects=$(ls ~/BugsInPy/projects)

echo "bugsinpy-testall reproduces all the bugs for every project"
echo "test 'ok' means reproduced successfully, buggy version failed and fixed version passed"
echo "test 'fail' means unable to reproduce, error happened or buggy version didn't fail test or fixed version didn't pass"
echo "see results in /temp/output.csv"
echo "see full tests logs in /temp/logs.txt"
echo "reproducing all the bugs for every project please wait ..."
echo "---------------"
echo "repo,bugid,test" > /temp/output.csv
echo "repo,bugid,test"

export GIT_TERMINAL_PROMPT=0

# Iterate over the projects
for project in $projects; do

  # Get the number of bugs in the project
  bugs=$(ls ~/BugsInPy/projects/$project/bugs | wc -l)

  echo "Working $bugs bugs in project $project"  &>> /temp/logs.txt

  # For each bug, execute the test
  for bug in $(seq $bugs); do

    printf "$project,$bug," >> /temp/output.csv
    printf "$project,$bug,"

    # Test buggy (0) version
    bugsinpy-checkout -p $project -v 0 -i $bug -w /temp/projects &>> /temp/logs.txt
    cd /temp/projects/$project
    bugsinpy-compile &>> /temp/logs.txt
    bugsinpy-test &>> /temp/logs.txt

    # Make sure a failure is detected in buggy version and bug is reproducible
    if [ ! -f "bugsinpy_fail.txt" ]; then
      echo "fail" >> /temp/output.csv
      echo "fail"
    else

      # Test fixed (1) version
      bugsinpy-checkout -p $project -v 1 -i $bug -w /temp/projects &>> /temp/logs.txt
      cd /temp/projects/$project
      bugsinpy-compile &>> /temp/logs.txt
      bugsinpy-test &>> /temp/logs.txt

      # Test execution output and make sure fixed version passes test ok
      if [ -f "bugsinpy_fail.txt" ]; then
        echo "fail" >> /temp/output.csv
        echo "fail"
      else
        echo "ok" >> /temp/output.csv
        echo "ok"
      fi
    fi
  done
done

echo "done."
