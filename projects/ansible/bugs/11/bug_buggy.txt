pytest test/units/modules/network/ios/test_ios_banner.py::TestIosBannerModule::test_ios_banner_nochange
pytest test/units/modules/network/ios/test_ios_banner.py::TestIosBannerIos12Module::test_ios_banner_nochange
RUN EVERY COMMAND
0


============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.10.1, py-1.11.0, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/ansible, inifile:
plugins: mock-1.2
collected 1 item

test/units/modules/network/ios/test_ios_banner.py F                      [100%]

=================================== FAILURES ===================================
_________________ TestIosBannerModule.test_ios_banner_nochange _________________

self = <units.modules.network.ios.test_ios_banner.TestIosBannerModule testMethod=test_ios_banner_nochange>

    def setUp(self):
        super(TestIosBannerModule, self).setUp()
    
        self.mock_get_config = patch('ansible.modules.network.ios.ios_banner.get_config')
>       self.get_config = self.mock_get_config.start()

test/units/modules/network/ios/test_ios_banner.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/bdadf60111059c1c5aebbf31698bc2b1/lib/python3.6/unittest/mock.py:1378: in start
    result = self.__enter__()
/opt/conda/envs/bdadf60111059c1c5aebbf31698bc2b1/lib/python3.6/unittest/mock.py:1247: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7fa60c725320>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
            raise AttributeError(
>               "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'ansible.modules.network.ios.ios_banner' from '/opt/conda/envs/bdadf60111059c1c5aebbf31698bc2b1/lib/python3.6/site-packages/ansible-2.10.0.dev0-py3.6.egg/ansible/modules/network/ios/ios_banner.py'> does not have the attribute 'get_config'

/opt/conda/envs/bdadf60111059c1c5aebbf31698bc2b1/lib/python3.6/unittest/mock.py:1221: AttributeError
=========================== 1 failed in 0.13 seconds ===========================
RUN EVERY COMMAND
1
pytest test/units/modules/network/ios/test_ios_banner.py::TestIosBannerModule::test_ios_banner_nochange

============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-3.10.1, py-1.11.0, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/ansible, inifile:
plugins: mock-1.2
collected 1 item

test/units/modules/network/ios/test_ios_banner.py F                      [100%]

=================================== FAILURES ===================================
______________ TestIosBannerIos12Module.test_ios_banner_nochange _______________

self = <units.modules.network.ios.test_ios_banner.TestIosBannerIos12Module testMethod=test_ios_banner_nochange>

    def setUp(self):
        super(TestIosBannerModule, self).setUp()
    
        self.mock_get_config = patch('ansible.modules.network.ios.ios_banner.get_config')
>       self.get_config = self.mock_get_config.start()

test/units/modules/network/ios/test_ios_banner.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/bdadf60111059c1c5aebbf31698bc2b1/lib/python3.6/unittest/mock.py:1378: in start
    result = self.__enter__()
/opt/conda/envs/bdadf60111059c1c5aebbf31698bc2b1/lib/python3.6/unittest/mock.py:1247: in __enter__
    original, local = self.get_original()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <unittest.mock._patch object at 0x7f933e989240>

    def get_original(self):
        target = self.getter()
        name = self.attribute
    
        original = DEFAULT
        local = False
    
        try:
            original = target.__dict__[name]
        except (AttributeError, KeyError):
            original = getattr(target, name, DEFAULT)
        else:
            local = True
    
        if name in _builtins and isinstance(target, ModuleType):
            self.create = True
    
        if not self.create and original is DEFAULT:
            raise AttributeError(
>               "%s does not have the attribute %r" % (target, name)
            )
E           AttributeError: <module 'ansible.modules.network.ios.ios_banner' from '/opt/conda/envs/bdadf60111059c1c5aebbf31698bc2b1/lib/python3.6/site-packages/ansible-2.10.0.dev0-py3.6.egg/ansible/modules/network/ios/ios_banner.py'> does not have the attribute 'get_config'

/opt/conda/envs/bdadf60111059c1c5aebbf31698bc2b1/lib/python3.6/unittest/mock.py:1221: AttributeError
=========================== 1 failed in 0.12 seconds ===========================
