pytest tests/keras/metrics_test.py::test_sparse_categorical_accuracy_correctness
RUN EVERY COMMAND
0


============================= test session starts ==============================
platform linux -- Python 3.7.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1 -- /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/bin/python
cachedir: .pytest_cache
rootdir: /home/user/projects/keras, inifile: pytest.ini
plugins: forked-1.1.3, flaky-3.6.1, xdist-1.32.0
gw0 I / gw1 I
[gw0] linux Python 3.7.3 cwd: /home/user/projects/keras
[gw1] linux Python 3.7.3 cwd: /home/user/projects/keras
[gw0] Python 3.7.3 (default, Mar 27 2019, 22:11:17)  -- [GCC 7.3.0]
[gw1] Python 3.7.3 (default, Mar 27 2019, 22:11:17)  -- [GCC 7.3.0]
gw0 [1] / gw1 [1]

scheduling tests via LoadScheduling

tests/keras/metrics_test.py::test_sparse_categorical_accuracy_correctness 
[gw0] [100%] PASSED tests/keras/metrics_test.py::test_sparse_categorical_accuracy_correctness 

=============================== warnings summary ===============================
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/h5py/__init__.py:46
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/h5py/__init__.py:46
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/h5py/__init__.py:46: DeprecationWarning: `np.typeDict` is a deprecated alias for `np.sctypeDict`.
    from ._conv import register_converters as _register_converters

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/pywrap_tensorflow_internal.py:15
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/pywrap_tensorflow_internal.py:15
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/pywrap_tensorflow_internal.py:15: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
    import imp

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:597
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:597
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:597: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.object,

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:605
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:605
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:605: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.bool,

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:639
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:639
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:639: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.object,

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:649
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:649
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/dtypes.py:649: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.bool,

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:106
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:106
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:106: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.object:

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:108
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:108
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:108: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.bool:

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:10
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:10
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:10: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _nlv = LooseVersion(_np_version)

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:11
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:11
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:11: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p14 = _nlv < LooseVersion("1.14")

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:12
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:12
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:12: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p15 = _nlv < LooseVersion("1.15")

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:13
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:13
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:13: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p16 = _nlv < LooseVersion("1.16")

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:14
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:14
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:14: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p17 = _nlv < LooseVersion("1.17")

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:15
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:15
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/__init__.py:15: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    _np_version_under1p18 = _nlv < LooseVersion("1.18")

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/setuptools/_distutils/version.py:346
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/setuptools/_distutils/version.py:346
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/setuptools/_distutils/version.py:346: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    other = LooseVersion(other)

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/compat/numpy/function.py:114: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if LooseVersion(_np_version) >= LooseVersion("1.17.0"):

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/_testing.py:24
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/_testing.py:24
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/pandas/_testing.py:24: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    import pandas._libs.testing as _testing

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:568
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:568
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:568: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    (np.object, string),

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:569
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:569
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:569: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    (np.bool, bool),

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:593
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:593
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:593: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    types_pb2.DT_STRING: np.object,

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:597
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:597
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:597: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    types_pb2.DT_BOOL: np.bool,

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:614
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:614
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:614: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    types_pb2.DT_STRING_REF: np.object,

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:619
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:619
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:619: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    types_pb2.DT_BOOL_REF: np.bool,

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:100
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:100
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:100: DeprecationWarning: `np.object` is a deprecated alias for the builtin `object`. To silence this warning, use `object` by itself. Doing this will not modify any behavior and is safe. 
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.object: SlowAppendObjectArrayToTensorProto,

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:101
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:101
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorboard/util/tensor_util.py:101: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
  Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
    np.bool: SlowAppendBoolArrayToTensorProto,

keras/callbacks.py:18
keras/callbacks.py:18
  /home/user/projects/keras/keras/callbacks.py:18: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working
    from collections import Iterable

/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:521
/home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:521
  /home/user/.conda/envs/a0a5407915338c9fac99516b5bd41c30/lib/python3.7/site-packages/tensorflow_core/python/framework/tensor_util.py:521: DeprecationWarning: tostring() is deprecated. Use tobytes() instead.
    tensor_proto.tensor_content = nparray.tostring()

-- Docs: https://docs.pytest.org/en/latest/warnings.html
========================== slowest 20 test durations ===========================
0.04s call     tests/keras/metrics_test.py::test_sparse_categorical_accuracy_correctness

(0.00 durations hidden.  Use -vv to show these durations.)
======================== 1 passed, 56 warnings in 8.67s ========================
