pytest pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns
RUN EVERY COMMAND
0


============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-5.4.3, py-1.8.1, pluggy-0.13.1
rootdir: /home/user/BugsInPy/temp/projects/pandas, inifile: setup.cfg
plugins: hypothesis-5.16.0
collected 8 items

pandas/tests/io/excel/test_writers.py FFFFFFFF                           [100%]

=================================== FAILURES ===================================
_______ TestExcelWriter.test_write_subset_columns[True-0-openpyxl-.xlsx] _______

self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x7fc6c0bc7670>
path = '/tmp/tmpozoqtxc5.xlsx', to_excel_index = True, read_excel_index_col = 0

    @pytest.mark.parametrize(
        "to_excel_index,read_excel_index_col",
        [
            (True, 0),  # Include index in write to file
            (False, None),  # Dont include index in write to file
        ],
    )
    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):
        # GH 31677
        write_frame = DataFrame({"A": [1, 1, 1], "B": [2, 2, 2], "C": [3, 3, 3]})
        write_frame.to_excel(
            path, "col_subset_bug", columns=["A", "B"], index=to_excel_index
        )
    
        expected = write_frame[["A", "B"]]
        read_frame = pd.read_excel(
            path, "col_subset_bug", index_col=read_excel_index_col
        )
    
>       tm.assert_frame_equal(expected, read_frame)
E       AssertionError: DataFrame are different
E       
E       DataFrame shape mismatch
E       [left]:  (3, 2)
E       [right]: (3, 3)

pandas/tests/io/excel/test_writers.py:1070: AssertionError
_______ TestExcelWriter.test_write_subset_columns[True-0-openpyxl-.xlsm] _______

self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x7fc6bf93f1c0>
path = '/tmp/tmpmvhl_osc.xlsm', to_excel_index = True, read_excel_index_col = 0

    @pytest.mark.parametrize(
        "to_excel_index,read_excel_index_col",
        [
            (True, 0),  # Include index in write to file
            (False, None),  # Dont include index in write to file
        ],
    )
    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):
        # GH 31677
        write_frame = DataFrame({"A": [1, 1, 1], "B": [2, 2, 2], "C": [3, 3, 3]})
        write_frame.to_excel(
            path, "col_subset_bug", columns=["A", "B"], index=to_excel_index
        )
    
        expected = write_frame[["A", "B"]]
        read_frame = pd.read_excel(
            path, "col_subset_bug", index_col=read_excel_index_col
        )
    
>       tm.assert_frame_equal(expected, read_frame)
E       AssertionError: DataFrame are different
E       
E       DataFrame shape mismatch
E       [left]:  (3, 2)
E       [right]: (3, 3)

pandas/tests/io/excel/test_writers.py:1070: AssertionError
_________ TestExcelWriter.test_write_subset_columns[True-0-xlwt-.xls] __________

self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x7fc6bff36280>
path = '/tmp/tmp9me7dwfd.xls', to_excel_index = True, read_excel_index_col = 0

    @pytest.mark.parametrize(
        "to_excel_index,read_excel_index_col",
        [
            (True, 0),  # Include index in write to file
            (False, None),  # Dont include index in write to file
        ],
    )
    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):
        # GH 31677
        write_frame = DataFrame({"A": [1, 1, 1], "B": [2, 2, 2], "C": [3, 3, 3]})
        write_frame.to_excel(
            path, "col_subset_bug", columns=["A", "B"], index=to_excel_index
        )
    
        expected = write_frame[["A", "B"]]
        read_frame = pd.read_excel(
            path, "col_subset_bug", index_col=read_excel_index_col
        )
    
>       tm.assert_frame_equal(expected, read_frame)
E       AssertionError: DataFrame are different
E       
E       DataFrame shape mismatch
E       [left]:  (3, 2)
E       [right]: (3, 3)

pandas/tests/io/excel/test_writers.py:1070: AssertionError
______ TestExcelWriter.test_write_subset_columns[True-0-xlsxwriter-.xlsx] ______

self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x7fc6bff23760>
path = '/tmp/tmpdgui5o59.xlsx', to_excel_index = True, read_excel_index_col = 0

    @pytest.mark.parametrize(
        "to_excel_index,read_excel_index_col",
        [
            (True, 0),  # Include index in write to file
            (False, None),  # Dont include index in write to file
        ],
    )
    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):
        # GH 31677
        write_frame = DataFrame({"A": [1, 1, 1], "B": [2, 2, 2], "C": [3, 3, 3]})
        write_frame.to_excel(
            path, "col_subset_bug", columns=["A", "B"], index=to_excel_index
        )
    
        expected = write_frame[["A", "B"]]
        read_frame = pd.read_excel(
            path, "col_subset_bug", index_col=read_excel_index_col
        )
    
>       tm.assert_frame_equal(expected, read_frame)
E       AssertionError: DataFrame are different
E       
E       DataFrame shape mismatch
E       [left]:  (3, 2)
E       [right]: (3, 3)

pandas/tests/io/excel/test_writers.py:1070: AssertionError
_____ TestExcelWriter.test_write_subset_columns[False-None-openpyxl-.xlsx] _____

self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x7fc6bf96d730>
path = '/tmp/tmp8r_bc737.xlsx', to_excel_index = False
read_excel_index_col = None

    @pytest.mark.parametrize(
        "to_excel_index,read_excel_index_col",
        [
            (True, 0),  # Include index in write to file
            (False, None),  # Dont include index in write to file
        ],
    )
    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):
        # GH 31677
        write_frame = DataFrame({"A": [1, 1, 1], "B": [2, 2, 2], "C": [3, 3, 3]})
        write_frame.to_excel(
            path, "col_subset_bug", columns=["A", "B"], index=to_excel_index
        )
    
        expected = write_frame[["A", "B"]]
        read_frame = pd.read_excel(
            path, "col_subset_bug", index_col=read_excel_index_col
        )
    
>       tm.assert_frame_equal(expected, read_frame)
E       AssertionError: DataFrame are different
E       
E       DataFrame shape mismatch
E       [left]:  (3, 2)
E       [right]: (3, 3)

pandas/tests/io/excel/test_writers.py:1070: AssertionError
_____ TestExcelWriter.test_write_subset_columns[False-None-openpyxl-.xlsm] _____

self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x7fc6bf948fa0>
path = '/tmp/tmpakg60xj1.xlsm', to_excel_index = False
read_excel_index_col = None

    @pytest.mark.parametrize(
        "to_excel_index,read_excel_index_col",
        [
            (True, 0),  # Include index in write to file
            (False, None),  # Dont include index in write to file
        ],
    )
    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):
        # GH 31677
        write_frame = DataFrame({"A": [1, 1, 1], "B": [2, 2, 2], "C": [3, 3, 3]})
        write_frame.to_excel(
            path, "col_subset_bug", columns=["A", "B"], index=to_excel_index
        )
    
        expected = write_frame[["A", "B"]]
        read_frame = pd.read_excel(
            path, "col_subset_bug", index_col=read_excel_index_col
        )
    
>       tm.assert_frame_equal(expected, read_frame)
E       AssertionError: DataFrame are different
E       
E       DataFrame shape mismatch
E       [left]:  (3, 2)
E       [right]: (3, 3)

pandas/tests/io/excel/test_writers.py:1070: AssertionError
_______ TestExcelWriter.test_write_subset_columns[False-None-xlwt-.xls] ________

self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x7fc6c49fc790>
path = '/tmp/tmp32r75tui.xls', to_excel_index = False
read_excel_index_col = None

    @pytest.mark.parametrize(
        "to_excel_index,read_excel_index_col",
        [
            (True, 0),  # Include index in write to file
            (False, None),  # Dont include index in write to file
        ],
    )
    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):
        # GH 31677
        write_frame = DataFrame({"A": [1, 1, 1], "B": [2, 2, 2], "C": [3, 3, 3]})
        write_frame.to_excel(
            path, "col_subset_bug", columns=["A", "B"], index=to_excel_index
        )
    
        expected = write_frame[["A", "B"]]
        read_frame = pd.read_excel(
            path, "col_subset_bug", index_col=read_excel_index_col
        )
    
>       tm.assert_frame_equal(expected, read_frame)
E       AssertionError: DataFrame are different
E       
E       DataFrame shape mismatch
E       [left]:  (3, 2)
E       [right]: (3, 3)

pandas/tests/io/excel/test_writers.py:1070: AssertionError
____ TestExcelWriter.test_write_subset_columns[False-None-xlsxwriter-.xlsx] ____

self = <pandas.tests.io.excel.test_writers.TestExcelWriter object at 0x7fc6c4ac6490>
path = '/tmp/tmp8064nqw8.xlsx', to_excel_index = False
read_excel_index_col = None

    @pytest.mark.parametrize(
        "to_excel_index,read_excel_index_col",
        [
            (True, 0),  # Include index in write to file
            (False, None),  # Dont include index in write to file
        ],
    )
    def test_write_subset_columns(self, path, to_excel_index, read_excel_index_col):
        # GH 31677
        write_frame = DataFrame({"A": [1, 1, 1], "B": [2, 2, 2], "C": [3, 3, 3]})
        write_frame.to_excel(
            path, "col_subset_bug", columns=["A", "B"], index=to_excel_index
        )
    
        expected = write_frame[["A", "B"]]
        read_frame = pd.read_excel(
            path, "col_subset_bug", index_col=read_excel_index_col
        )
    
>       tm.assert_frame_equal(expected, read_frame)
E       AssertionError: DataFrame are different
E       
E       DataFrame shape mismatch
E       [left]:  (3, 2)
E       [right]: (3, 3)

pandas/tests/io/excel/test_writers.py:1070: AssertionError
=============================== warnings summary ===============================
pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[True-0-openpyxl-.xlsx]
pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[True-0-openpyxl-.xlsm]
pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[True-0-xlwt-.xls]
pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[True-0-xlsxwriter-.xlsx]
pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[False-None-openpyxl-.xlsx]
pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[False-None-openpyxl-.xlsm]
pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[False-None-xlwt-.xls]
pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[False-None-xlsxwriter-.xlsx]
  /home/user/BugsInPy/temp/projects/pandas/pandas/compat/_optional.py:99: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    if distutils.version.LooseVersion(version) < minimum_version:

pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[True-0-openpyxl-.xlsx]
pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[True-0-openpyxl-.xlsm]
pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[True-0-xlwt-.xls]
pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[True-0-xlsxwriter-.xlsx]
pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[False-None-openpyxl-.xlsx]
pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[False-None-openpyxl-.xlsm]
pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[False-None-xlwt-.xls]
pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[False-None-xlsxwriter-.xlsx]
  /opt/conda/envs/4d01480f238efecedbec2eb4e685f522/lib/python3.8/site-packages/setuptools/_distutils/version.py:345: DeprecationWarning: distutils Version classes are deprecated. Use packaging.version instead.
    other = LooseVersion(other)

-- Docs: https://docs.pytest.org/en/latest/warnings.html
=========================== short test summary info ============================
FAILED pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[True-0-openpyxl-.xlsx]
FAILED pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[True-0-openpyxl-.xlsm]
FAILED pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[True-0-xlwt-.xls]
FAILED pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[True-0-xlsxwriter-.xlsx]
FAILED pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[False-None-openpyxl-.xlsx]
FAILED pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[False-None-openpyxl-.xlsm]
FAILED pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[False-None-xlwt-.xls]
FAILED pandas/tests/io/excel/test_writers.py::TestExcelWriter::test_write_subset_columns[False-None-xlsxwriter-.xlsx]
======================== 8 failed, 16 warnings in 1.05s ========================
