pytest test/parameter_test.py::ParameterTest::test_local_insignificant_param
pytest test/parameter_test.py::TestRemoveGlobalParameters::test_global_significant_param
pytest test/parameter_test.py::TestRemoveGlobalParameters::test_mixed_params
pytest test/parameter_test.py::TestRemoveGlobalParameters::test_mixed_params_inheritence
RUN EVERY COMMAND
0


============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-7.3.1, pluggy-1.0.0
rootdir: /home/user/BugsInPy/temp/projects/luigi
collected 1 item

test/parameter_test.py F                                                 [100%]

=================================== FAILURES ===================================
_________________ ParameterTest.test_local_insignificant_param _________________

self = <parameter_test.ParameterTest testMethod=test_local_insignificant_param>

    def test_local_insignificant_param(self):
        """ Ensure we have the same behavior as in before a78338c  """
        class MyTask(luigi.Task):
            # This could typically be "--num-threads=True"
            x = luigi.Parameter(significant=False)
    
>       MyTask('arg')

test/parameter_test.py:304: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/task.py:103: in __call__
    param_values = cls.get_param_values(params, args, kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'parameter_test.ParameterTest.test_local_insignificant_param.<locals>.MyTask'>
params = [('x', <luigi.parameter.Parameter object at 0x7fa7e4576760>)]
args = ('arg',), kwargs = {}

    @classmethod
    def get_param_values(cls, params, args, kwargs):
        """
        Get the values of the parameters from the args and kwargs.
    
        :param params: list of (param_name, Parameter).
        :param args: positional arguments
        :param kwargs: keyword arguments.
        :returns: list of `(name, value)` tuples, one for each parameter.
        """
        result = {}
    
        params_dict = dict(params)
    
        task_name = cls.task_family
    
        # In case any exceptions are thrown, create a helpful description of how the Task was invoked
        # TODO: should we detect non-reprable arguments? These will lead to mysterious errors
        exc_desc = '%s[args=%s, kwargs=%s]' % (task_name, args, kwargs)
    
        # Fill in the positional arguments
        positional_params = [(n, p) for n, p in params if p.significant]
        for i, arg in enumerate(args):
            if i >= len(positional_params):
>               raise parameter.UnknownParameterException('%s: takes at most %d parameters (%d given)' % (exc_desc, len(positional_params), len(args)))
E               luigi.parameter.UnknownParameterException: MyTask[args=('arg',), kwargs={}]: takes at most 0 parameters (1 given)

/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/task.py:337: UnknownParameterException
=============================== warnings summary ===============================
../../../../../../opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52
../../../../../../opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52
../../../../../../opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52
  /opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52: DeprecationWarning: is_global is deprecated and will be removed. Please use either  (a) class level config (eg. --MyTask-my-param 42) (b) a separate Config class with global settings on it
    return function(*args, **kwargs)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test/parameter_test.py::ParameterTest::test_local_insignificant_param
======================== 1 failed, 3 warnings in 0.09s =========================
RUN EVERY COMMAND
1
pytest test/parameter_test.py::ParameterTest::test_local_insignificant_param

============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-7.3.1, pluggy-1.0.0
rootdir: /home/user/BugsInPy/temp/projects/luigi
collected 1 item

test/parameter_test.py F                                                 [100%]

=================================== FAILURES ===================================
___________ TestRemoveGlobalParameters.test_global_significant_param ___________

self = <parameter_test.TestRemoveGlobalParameters testMethod=test_global_significant_param>

    def test_global_significant_param(self):
        """ We don't want any kind of global param to be positional """
        class MyTask(luigi.Task):
            # This could typically be called "--test-dry-run"
            x_g1 = luigi.Parameter(default='y', is_global=True, significant=True)
    
>       self.assertRaises(luigi.parameter.UnknownParameterException,
                          lambda: MyTask('arg'))
E       AssertionError: UnknownParameterException not raised by <lambda>

test/parameter_test.py:428: AssertionError
=============================== warnings summary ===============================
../../../../../../opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52
../../../../../../opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52
../../../../../../opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52
test/parameter_test.py::TestRemoveGlobalParameters::test_global_significant_param
  /opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52: DeprecationWarning: is_global is deprecated and will be removed. Please use either  (a) class level config (eg. --MyTask-my-param 42) (b) a separate Config class with global settings on it
    return function(*args, **kwargs)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test/parameter_test.py::TestRemoveGlobalParameters::test_global_significant_param
======================== 1 failed, 4 warnings in 0.06s =========================
RUN EVERY COMMAND
2
pytest test/parameter_test.py::TestRemoveGlobalParameters::test_global_significant_param

============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-7.3.1, pluggy-1.0.0
rootdir: /home/user/BugsInPy/temp/projects/luigi
collected 1 item

test/parameter_test.py F                                                 [100%]

=================================== FAILURES ===================================
_________________ TestRemoveGlobalParameters.test_mixed_params _________________

self = <parameter_test.TestRemoveGlobalParameters testMethod=test_mixed_params>

    def test_mixed_params(self):
        """ Essentially for what broke in a78338c and was reported in #738 """
        class MyTask(luigi.Task):
            # This could typically be "--num-threads=True"
            x_g3 = luigi.Parameter(default='y', is_global=True)
            local_param = luigi.Parameter()
    
>       MyTask('setting_local_param')

test/parameter_test.py:447: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/task.py:103: in __call__
    param_values = cls.get_param_values(params, args, kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'parameter_test.TestRemoveGlobalParameters.test_mixed_params.<locals>.MyTask'>
params = [('x_g3', <luigi.parameter.Parameter object at 0x7fd04c431c70>), ('local_param', <luigi.parameter.Parameter object at 0x7fd04c431ca0>)]
args = ('setting_local_param',), kwargs = {}

    @classmethod
    def get_param_values(cls, params, args, kwargs):
        """
        Get the values of the parameters from the args and kwargs.
    
        :param params: list of (param_name, Parameter).
        :param args: positional arguments
        :param kwargs: keyword arguments.
        :returns: list of `(name, value)` tuples, one for each parameter.
        """
        result = {}
    
        params_dict = dict(params)
    
        task_name = cls.task_family
    
        # In case any exceptions are thrown, create a helpful description of how the Task was invoked
        # TODO: should we detect non-reprable arguments? These will lead to mysterious errors
        exc_desc = '%s[args=%s, kwargs=%s]' % (task_name, args, kwargs)
    
        # Fill in the positional arguments
        positional_params = [(n, p) for n, p in params if p.significant]
        for i, arg in enumerate(args):
            if i >= len(positional_params):
                raise parameter.UnknownParameterException('%s: takes at most %d parameters (%d given)' % (exc_desc, len(positional_params), len(args)))
            param_name, param_obj = positional_params[i]
            result[param_name] = arg
    
        # Then the optional arguments
        for param_name, arg in six.iteritems(kwargs):
            if param_name in result:
                raise parameter.DuplicateParameterException('%s: parameter %s was already set as a positional parameter' % (exc_desc, param_name))
            if param_name not in params_dict:
                raise parameter.UnknownParameterException('%s: unknown parameter %s' % (exc_desc, param_name))
            result[param_name] = arg
    
        # Then use the defaults for anything not filled in
        for param_name, param_obj in params:
            if param_name not in result:
                if not param_obj.has_task_value(task_name, param_name):
>                   raise parameter.MissingParameterException("%s: requires the '%s' parameter to be set" % (exc_desc, param_name))
E                   luigi.parameter.MissingParameterException: MyTask[args=('setting_local_param',), kwargs={}]: requires the 'local_param' parameter to be set

/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/task.py:353: MissingParameterException
=============================== warnings summary ===============================
../../../../../../opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52
../../../../../../opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52
../../../../../../opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52
test/parameter_test.py::TestRemoveGlobalParameters::test_mixed_params
  /opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52: DeprecationWarning: is_global is deprecated and will be removed. Please use either  (a) class level config (eg. --MyTask-my-param 42) (b) a separate Config class with global settings on it
    return function(*args, **kwargs)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test/parameter_test.py::TestRemoveGlobalParameters::test_mixed_params
======================== 1 failed, 4 warnings in 0.07s =========================
RUN EVERY COMMAND
3
pytest test/parameter_test.py::TestRemoveGlobalParameters::test_mixed_params

============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-7.3.1, pluggy-1.0.0
rootdir: /home/user/BugsInPy/temp/projects/luigi
collected 1 item

test/parameter_test.py F                                                 [100%]

=================================== FAILURES ===================================
___________ TestRemoveGlobalParameters.test_mixed_params_inheritence ___________

self = <parameter_test.TestRemoveGlobalParameters testMethod=test_mixed_params_inheritence>

    def test_mixed_params_inheritence(self):
        """ A slightly more real-world like test case """
        class TaskWithOneGlobalParam(luigi.Task):
            non_positional_param = luigi.Parameter(default='y', is_global=True)
    
        class TaskWithOnePositionalParam(TaskWithOneGlobalParam):
            """ Try to mess with positional parameters by subclassing """
            only_positional_param = luigi.Parameter()
    
            def complete(self):
                return True
    
        class PositionalParamsRequirer(luigi.Task):
    
            def requires(self):
                return TaskWithOnePositionalParam('only_positional_value')
    
            def run(self):
                pass
    
>       self.run_and_check(['PositionalParamsRequirer'])

test/parameter_test.py:469: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
test/parameter_test.py:367: in run_and_check
    self.assertTrue(run_exit_status)
E   AssertionError: False is not true
----------------------------- Captured stderr call -----------------------------
DEBUG: Checking if PositionalParamsRequirer() is complete
ERROR: Luigi unexpected framework error while scheduling PositionalParamsRequirer()
Traceback (most recent call last):
  File "/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/worker.py", line 453, in add
    for next in self._add(item, is_complete):
  File "/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/worker.py", line 506, in _add
    deps = task.deps()
  File "/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/task.py", line 556, in deps
    return flatten(self._requires())
  File "/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/task.py", line 530, in _requires
    return flatten(self.requires())  # base impl
  File "/home/user/BugsInPy/temp/projects/luigi/test/parameter_test.py", line 464, in requires
    return TaskWithOnePositionalParam('only_positional_value')
  File "/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/task.py", line 103, in __call__
    param_values = cls.get_param_values(params, args, kwargs)
  File "/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/task.py", line 353, in get_param_values
    raise parameter.MissingParameterException("%s: requires the '%s' parameter to be set" % (exc_desc, param_name))
luigi.parameter.MissingParameterException: TaskWithOnePositionalParam[args=('only_positional_value',), kwargs={}]: requires the 'only_positional_param' parameter to be set
INFO: Skipping error email. Set `error-email` in the `core` section of the luigi config file to receive error emails.
INFO: Done scheduling tasks
INFO: Running Worker with 1 processes
DEBUG: Asking scheduler for work...
INFO: Done
INFO: There are no more tasks to run at this time
INFO: Worker Worker(salt=422745994, workers=1, host=4178772b82f0, username=root, pid=16667) was stopped. Shutting down Keep-Alive thread
------------------------------ Captured log call -------------------------------
DEBUG    luigi-interface:worker.py:251 Checking if PositionalParamsRequirer() is complete
ERROR    luigi-interface:worker.py:412 Luigi unexpected framework error while scheduling PositionalParamsRequirer()
Traceback (most recent call last):
  File "/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/worker.py", line 453, in add
    for next in self._add(item, is_complete):
  File "/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/worker.py", line 506, in _add
    deps = task.deps()
  File "/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/task.py", line 556, in deps
    return flatten(self._requires())
  File "/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/task.py", line 530, in _requires
    return flatten(self.requires())  # base impl
  File "/home/user/BugsInPy/temp/projects/luigi/test/parameter_test.py", line 464, in requires
    return TaskWithOnePositionalParam('only_positional_value')
  File "/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/task.py", line 103, in __call__
    param_values = cls.get_param_values(params, args, kwargs)
  File "/opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/task.py", line 353, in get_param_values
    raise parameter.MissingParameterException("%s: requires the '%s' parameter to be set" % (exc_desc, param_name))
luigi.parameter.MissingParameterException: TaskWithOnePositionalParam[args=('only_positional_value',), kwargs={}]: requires the 'only_positional_param' parameter to be set
INFO     luigi-interface:notifications.py:166 Skipping error email. Set `error-email` in the `core` section of the luigi config file to receive error emails.
INFO     luigi-interface:interface.py:174 Done scheduling tasks
INFO     luigi-interface:worker.py:706 Running Worker with 1 processes
DEBUG    luigi-interface:worker.py:561 Asking scheduler for work...
INFO     luigi-interface:worker.py:550 Done
INFO     luigi-interface:worker.py:551 There are no more tasks to run at this time
INFO     luigi-interface:worker.py:339 Worker Worker(salt=422745994, workers=1, host=4178772b82f0, username=root, pid=16667) was stopped. Shutting down Keep-Alive thread
=============================== warnings summary ===============================
../../../../../../opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52
../../../../../../opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52
../../../../../../opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52
test/parameter_test.py::TestRemoveGlobalParameters::test_mixed_params_inheritence
  /opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/deprecate_kwarg.py:52: DeprecationWarning: is_global is deprecated and will be removed. Please use either  (a) class level config (eg. --MyTask-my-param 42) (b) a separate Config class with global settings on it
    return function(*args, **kwargs)

test/parameter_test.py::TestRemoveGlobalParameters::test_mixed_params_inheritence
  /opt/conda/envs/fdb32946407a53752785b0a514f72496/lib/python3.8/site-packages/luigi-1.0.24-py3.8.egg/luigi/worker.py:253: UserWarning: Task PositionalParamsRequirer() without outputs has no custom complete() method
    is_complete = task.complete()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test/parameter_test.py::TestRemoveGlobalParameters::test_mixed_params_inheritence
======================== 1 failed, 5 warnings in 0.08s =========================
