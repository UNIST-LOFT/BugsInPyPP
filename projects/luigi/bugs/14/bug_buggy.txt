pytest test/central_planner_test.py::CentralPlannerTest::test_no_crash_on_only_disable_hard_timeout
RUN EVERY COMMAND
0


============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-7.3.1, pluggy-1.0.0
rootdir: /home/user/BugsInPy/temp/projects/luigi
collected 1 item

test/central_planner_test.py F                                           [100%]

=================================== FAILURES ===================================
________ CentralPlannerTest.test_no_crash_on_only_disable_hard_timeout _________

self = <central_planner_test.CentralPlannerTest testMethod=test_no_crash_on_only_disable_hard_timeout>

    def test_no_crash_on_only_disable_hard_timeout(self):
        """
        Scheduler shouldn't crash with only disable_hard_timeout
    
        There was some failure happening when disable_hard_timeout was set but
        disable_failures was not.
        """
        self.sch = CentralPlannerScheduler(retry_delay=5,
                                           disable_hard_timeout=100)
        self.setTime(1)
        self.sch.add_worker(WORKER, [])
        self.sch.ping(worker=WORKER)
    
        self.setTime(2)
        self.sch.add_task(worker=WORKER, task_id='A')
        self.sch.add_task(worker=WORKER, task_id='B', deps=['A'])
        self.assertEqual(self.sch.get_work(worker=WORKER)['task_id'], 'A')
>       self.sch.add_task(worker=WORKER, task_id='A', status=FAILED)

test/central_planner_test.py:1147: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/opt/conda/envs/6fa2c59a2daef6c05cecb8364ce5a579/lib/python3.8/site-packages/luigi-2.1.1-py3.8.egg/luigi/scheduler.py:635: in add_task
    self._state.set_status(task, PENDING if status == SUSPENDED else status, self._config)
/opt/conda/envs/6fa2c59a2daef6c05cecb8364ce5a579/lib/python3.8/site-packages/luigi-2.1.1-py3.8.egg/luigi/scheduler.py:388: in set_status
    if task.has_excessive_failures():
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = Task({'id': 'A', 'stakeholders': {'myworker'}, 'workers': {'myworker'}, 'deps': set(), 'status': 'RUNNING', 'time': 2,...ct at 0x7fdcf00bdeb0>, 'tracking_url': None, 'status_message': None, 'scheduler_disable_time': None, 'runnable': True})

    def has_excessive_failures(self):
        if (self.failures.first_failure_time is not None and
                self.disable_hard_timeout):
            if (time.time() >= self.failures.first_failure_time +
                    self.disable_hard_timeout):
                return True
    
>       if self.failures.num_failures() >= self.disable_failures:
E       TypeError: '>=' not supported between instances of 'int' and 'NoneType'

/opt/conda/envs/6fa2c59a2daef6c05cecb8364ce5a579/lib/python3.8/site-packages/luigi-2.1.1-py3.8.egg/luigi/scheduler.py:208: TypeError
=============================== warnings summary ===============================
../../../../../../opt/conda/envs/6fa2c59a2daef6c05cecb8364ce5a579/lib/python3.8/site-packages/luigi-2.1.1-py3.8.egg/luigi/parameter.py:28
  /opt/conda/envs/6fa2c59a2daef6c05cecb8364ce5a579/lib/python3.8/site-packages/luigi-2.1.1-py3.8.egg/luigi/parameter.py:28: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3, and in 3.9 it will stop working
    from collections import OrderedDict, Mapping

../../../../../../opt/conda/envs/6fa2c59a2daef6c05cecb8364ce5a579/lib/python3.8/site-packages/pkg_resources/__init__.py:121
  /opt/conda/envs/6fa2c59a2daef6c05cecb8364ce5a579/lib/python3.8/site-packages/pkg_resources/__init__.py:121: DeprecationWarning: pkg_resources is deprecated as an API
    warnings.warn("pkg_resources is deprecated as an API", DeprecationWarning)

../../../../../../opt/conda/envs/6fa2c59a2daef6c05cecb8364ce5a579/lib/python3.8/site-packages/nose/importer.py:12
  /opt/conda/envs/6fa2c59a2daef6c05cecb8364ce5a579/lib/python3.8/site-packages/nose/importer.py:12: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
    from imp import find_module, load_module, acquire_lock, release_lock

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED test/central_planner_test.py::CentralPlannerTest::test_no_crash_on_only_disable_hard_timeout
======================== 1 failed, 3 warnings in 0.17s =========================
