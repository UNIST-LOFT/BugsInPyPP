pytest test/instance_test.py::InstanceTest::test_unhashable_type
RUN EVERY COMMAND
0


============================= test session starts ==============================
platform linux -- Python 3.8.3, pytest-7.3.1, pluggy-1.0.0
rootdir: /home/user/BugsInPy/temp/projects/luigi
collected 1 item

test/instance_test.py F                                                  [100%]

=================================== FAILURES ===================================
______________________ InstanceTest.test_unhashable_type _______________________

cls = <class 'instance_test.InstanceTest.test_unhashable_type.<locals>.DummyTask'>
args = (), kwargs = {'x': {}}
instantiate = <function Register.__call__.<locals>.instantiate at 0x7f5c86a2d5e0>
h = {}, params = [('x', <luigi.parameter.Parameter object at 0x7f5c866e16a0>)]
param_values = [('x', {})]
k = (<class 'instance_test.InstanceTest.test_unhashable_type.<locals>.DummyTask'>, (('x', {}),))

    def __call__(cls, *args, **kwargs):
        """
        Custom class instantiation utilizing instance cache.
    
        If a Task has already been instantiated with the same parameters,
        the previous instance is returned to reduce number of object instances.
        """
        def instantiate():
            return super(Register, cls).__call__(*args, **kwargs)
    
        h = cls.__instance_cache
    
        if h is None:  # disabled
            return instantiate()
    
        params = cls.get_params()
        param_values = cls.get_param_values(params, args, kwargs)
    
        k = (cls, tuple(param_values))
    
        try:
>           hash(k)
E           TypeError: unhashable type: 'dict'

/opt/conda/envs/75eb04f8fcdb777b02bf36f1cb41d25c/lib/python3.8/site-packages/luigi-1.1.2-py3.8.egg/luigi/task_register.py:89: TypeError

During handling of the above exception, another exception occurred:

self = <instance_test.InstanceTest testMethod=test_unhashable_type>

    def test_unhashable_type(self):
        # See #857
        class DummyTask(luigi.Task):
            x = luigi.Parameter()
    
>       dummy = DummyTask(x={})

test/instance_test.py:96: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'instance_test.InstanceTest.test_unhashable_type.<locals>.DummyTask'>
args = (), kwargs = {'x': {}}
instantiate = <function Register.__call__.<locals>.instantiate at 0x7f5c86a2d5e0>
h = {}, params = [('x', <luigi.parameter.Parameter object at 0x7f5c866e16a0>)]
param_values = [('x', {})]
k = (<class 'instance_test.InstanceTest.test_unhashable_type.<locals>.DummyTask'>, (('x', {}),))

    def __call__(cls, *args, **kwargs):
        """
        Custom class instantiation utilizing instance cache.
    
        If a Task has already been instantiated with the same parameters,
        the previous instance is returned to reduce number of object instances.
        """
        def instantiate():
            return super(Register, cls).__call__(*args, **kwargs)
    
        h = cls.__instance_cache
    
        if h is None:  # disabled
            return instantiate()
    
        params = cls.get_params()
        param_values = cls.get_param_values(params, args, kwargs)
    
        k = (cls, tuple(param_values))
    
        try:
            hash(k)
        except TypeError:
>           logger.debug("Not all parameter values are hashable so instance isn't coming from the cache")
E           NameError: name 'logger' is not defined

/opt/conda/envs/75eb04f8fcdb777b02bf36f1cb41d25c/lib/python3.8/site-packages/luigi-1.1.2-py3.8.egg/luigi/task_register.py:91: NameError
=========================== short test summary info ============================
FAILED test/instance_test.py::InstanceTest::test_unhashable_type - NameError:...
============================== 1 failed in 0.05s ===============================
