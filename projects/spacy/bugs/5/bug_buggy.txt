py.test spacy/tests/test_language.py::test_evaluate_no_pipe
RUN EVERY COMMAND
0


============================= test session starts ==============================
platform linux -- Python 3.7.7, pytest-7.1.2, pluggy-1.0.0
rootdir: /home/user/BugsInPy/temp/projects/spacy, configfile: setup.cfg
plugins: timeout-1.4.2
collected 1 item

spacy/tests/test_language.py F                                           [100%]

=================================== FAILURES ===================================
____________________________ test_evaluate_no_pipe _____________________________

nlp = <spacy.language.Language object at 0x7f46f61d8a50>

    def test_evaluate_no_pipe(nlp):
        """Test that docs are processed correctly within Language.pipe if the
        component doesn't expose a .pipe method."""
    
        def pipe(doc):
            return doc
    
        text = "hello world"
        annots = {"cats": {"POSITIVE": 1.0, "NEGATIVE": 0.0}}
        nlp = Language(Vocab())
        nlp.add_pipe(pipe)
>       nlp.evaluate([(text, annots)])

spacy/tests/test_language.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
spacy/language.py:684: in evaluate
    for doc, gold in zip(docs, golds):
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

docs = <function test_evaluate_no_pipe.<locals>.pipe at 0x7f46f61157a0>
proc = [hello world], kwargs = {}

    def _pipe(docs, proc, kwargs):
        # We added some args for pipe that __call__ doesn't expect.
        kwargs = dict(kwargs)
        for arg in ["n_threads", "batch_size"]:
            if arg in kwargs:
                kwargs.pop(arg)
>       for doc in docs:
E       TypeError: 'function' object is not iterable

spacy/language.py:1105: TypeError
=========================== short test summary info ============================
FAILED spacy/tests/test_language.py::test_evaluate_no_pipe - TypeError: 'func...
============================== 1 failed in 0.24s ===============================
